{"version":3,"sources":["components/Header/index.js","components/Search/index.js","components/EmployeeRow/index.jsx","components/Employees/index.js","utils/api.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","id","Component","Search","state","inputValue","handleSearch","props","profiles","setStateCallback","searchValue","filteredProfiles","filter","profile","name","first","last","toLowerCase","includes","handleChange","event","setState","target","value","onClick","this","type","onChange","aria-label","aria-describedby","EmployeeRow","dob","Date","date","day","getDate","month","getMonth","year","getFullYear","dobDisplay","src","picture","thumbnail","alt","phone","email","Employees","handleAlphaSort","length","map","index","key","axios","get","App","setStateObj","alphaSortedProfiles","sort","a","b","localeCompare","API","then","res","data","results","catch","err","console","log","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.ee22c2fa.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./style.css\";\n\nclass Header extends Component {\n  render() {\n    return (\n      <div className=\"jumbotron jumbotron-fluid\">\n        <div className=\"container\">\n          <h1 className=\"display-4\">Employee Directory</h1>\n          <p className=\"lead\">\n            Click on <span id=\"headerWord\">Name</span> to list alphabetically, or use the search box to narrow your results\n          </p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport \"./style.css\";\n\nclass Search extends Component {\n  state = {\n    inputValue: \"\",\n  };\n\n  handleSearch = () => {\n    const { profiles, setStateCallback } = this.props;\n    const searchValue = this.state.inputValue;\n    const filteredProfiles = profiles.filter((profile) =>\n      (profile.name.first + \" \" + profile.name.last)\n        .toLowerCase()\n        .includes(searchValue.toLowerCase())\n    );\n    setStateCallback({ filteredProfiles });\n  };\n\n  handleChange = (event) => {\n    this.setState({\n      inputValue: event.target.value,\n    });\n  };\n\n  render() {\n    return (\n      <>\n        <div className=\"input-group input-group-sm mb-3\">\n          <div className=\"input-group-prepend\">\n            <button\n              className=\"input-group-text\"\n              id=\"inputGroup-sizing-sm\"\n              onClick={this.handleSearch}\n            >\n              Search\n            </button>\n          </div>\n          <input\n            type=\"text\"\n            value={this.state.inputValue}\n            onChange={this.handleChange}\n            className=\"form-control\"\n            aria-label=\"Sizing example input\"\n            aria-describedby=\"inputGroup-sizing-sm\"\n          />\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Search;\n","import React from \"react\";\nimport \"./style.css\";\n\nconst EmployeeRow = ({ profile }) => {\n  const dob = new Date(profile.dob.date);\n  const day = dob.getDate();\n  const month = dob.getMonth() + 1;\n  const year = dob.getFullYear();\n  const dobDisplay = `${month}-${day}-${year}`;\n\n  return (\n    <div>\n      <hr></hr>\n      <div className=\"row\" id=\"profileRow\">\n        <div className=\"col-md-2\">\n          <img src={profile.picture.thumbnail} alt=\"profile\" />\n        </div>\n        <div className=\"col-md-2\">\n          {profile.name.first + \" \" + profile.name.last}\n        </div>\n        <div className=\"col-md-2\">{profile.phone}</div>\n        <div className=\"col-md-4\">{profile.email}</div>\n        <div className=\"col-md-2\">{dobDisplay}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default EmployeeRow;\n","import React from \"react\";\nimport \"./style.css\";\nimport EmployeeRow from \"../EmployeeRow\";\n\nconst Employees = ({ profiles, handleAlphaSort }) => {\n  return (\n    <>\n      <div className=\"container\" id=\"employees\">\n        <div className=\"row\">\n          <div className=\"col-md-2\">Image</div>\n          <div \n            className=\"col-md-2\" \n            onClick={handleAlphaSort}\n            id=\"nameLink\"\n          >\n            Name\n          </div>\n          <div className=\"col-md-2\">Phone</div>\n          <div className=\"col-md-4\">Email</div>\n          <div className=\"col-md-2\">DOB</div>\n        </div>\n\n        {profiles.length > 0 && profiles.map((profile, index) => (\n          <EmployeeRow key={index} profile={profile} />\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default Employees;\n","import axios from \"axios\";\n\nexport default {\n  profiles: () => {\n    return axios.get(\n      \"https://randomuser.me/api/?results=50\"\n    );\n  }\n};\n\n","import React, { Component } from \"react\";\nimport Header from \"./components/Header\";\nimport Search from \"./components/Search\";\nimport Employees from \"./components/Employees\";\nimport API from \"./utils/api\";\nclass App extends Component {\n  state = {\n    profiles: [],\n    filteredProfiles: [],\n  };\n\n  componentDidMount() {\n    API.profiles()\n      .then((res) => {\n        this.setState({\n          profiles: res.data.results,\n          filteredProfiles: res.data.results,\n        });\n      })\n      .catch((err) => console.log(err));\n  }\n\n  setStateCallback = (setStateObj) => {\n    this.setState(setStateObj);\n  };\n\n  handleAlphaSort = () => {\n    const alphaSortedProfiles = this.state.filteredProfiles.sort((a, b) =>\n      a.name.last.toLowerCase().localeCompare(b.name.last.toLowerCase())\n    );\n    this.setState({filteredProfiles: alphaSortedProfiles});\n  };\n\n  render() {\n    const { profiles, filteredProfiles } = this.state;\n    return (\n      <>\n        <Header />\n        <Search \n          profiles={profiles} \n          setStateCallback={this.setStateCallback} \n        />\n        <hr></hr>\n        <Employees\n          profiles={filteredProfiles}\n          handleAlphaSort={this.handleAlphaSort}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}